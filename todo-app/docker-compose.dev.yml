services:
  app:
    image: todo-front-dev
    build:
      context: ./todo-frontend/ # The context will pick this directory as the "build context"
      dockerfile: dev.Dockerfile # This will simply tell which dockerfile to read
    volumes:
      - ./todo-frontend/:/usr/src/app # The path can be relative, so ./ is enough to say "the same location as the docker-compose.yml"
    environment:
      - REACT_APP_BACKEND_URL=http://localhost:8080/api
  server:
      image: todo-backend-image
      volumes:
        - ./todo-backend/:/usr/src/app
      environment: 
        - REDIS_URL=redis://redis:6379
        - MONGO_URL=mongodb://the_username:the_password@mongo:27017/the_database
      ports:
       - 3000:3000
      depends_on:
      - mongo
      - redis
  mongo:
      image: mongo
      environment:
        MONGO_INITDB_ROOT_USERNAME: root
        MONGO_INITDB_ROOT_PASSWORD: example
        MONGO_INITDB_DATABASE: the_database
      volumes: 
        - ./todo-backend/mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js
        - ./todo-backend/mongo_data:/data/db
  redis:
      image: "redis:latest"
      container_name: "my-redis-container2"
      command: ['redis-server', '--appendonly', 'yes'] # Overwrite the CMD
      volumes: # Declare the volume
        - ./todo-backend/redis_data:/data
  nginx:
      image: nginx:1.20.1
      volumes:
        - ./nginx.dev.conf:/etc/nginx/nginx.conf:ro
      ports:
        - 8080:80 # this is needed
      container_name: reverse-proxy
      depends_on:
        - app
        - server